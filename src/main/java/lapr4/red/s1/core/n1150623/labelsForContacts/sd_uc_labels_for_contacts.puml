@startuml

skinparam monochrome true
skinparam packageStyle rect
skinparam defaultFontName FG Virgil
skinparam shadowing false

actor "CRM User" as Actor
participant ":labelsForContactsUI" as UI <<presentation>>
participant ":labelsForContactsController" as ctrl
participant "list: List<Contact>" as list
participant "contactRepository : ContactRepository" as crep <<interface>>
participant "JpaContactRepository" as jpacrep
participant "labelFactory : LabelFactory" as lfac
participant "labelList : LabelList" as llist
participant LabelsToPDF as l2pdf


activate UI

    UI --> Actor : Shows contacts list and asks to choose contacts
    create ctrl
    UI -> ctrl: create()

    create lfac
    ctrl -> lfac : create()


    create llist
    ctrl -> llist : create()

    activate ctrl

    UI ->ctrl : allContacts(user)
    deactivate ctrl

    deactivate UI
    loop "While the CRM user wants to add more contacts"



    deactivate UI
                create list
                ctrl -> list : create()

    activate UI
         UI <- Actor : Chooses contact or writes contact name (or regex expression)

            activate ctrl
                UI -> ctrl : addLabel(name, photo, emails, addresses, phoneNumbers)

                activate lfac
                    ctrl -> lfac : construct(name, photo, emails, addresses, phoneNumbers)
                    lfac --> ctrl : createdLabel
                deactivate lfac
                activate llist
                    ctrl -> llist : addLabel(createdLabel)
                deactivate llist
            deactivate ctrl

    end loop


    UI --> Actor : Asks if wants to add contact's events
    deactivate UI

    alt Accepts
        Actor -> UI : Wants to add events
        activate UI
        UI --> Actor : Asks the  end date of the list of events to export with contacts

        UI <- Actor : Chooses end dates

        activate ctrl
                UI --> Actor : Asks to choose path to save file
                Actor -> UI : Chooses path
                UI -> ctrl : choosePath(path)
                activate llist
                ctrl -> llist : choosePath(path)
                deactivate llist
        deactivate ctrl


                UI -> ctrl : limitEvents(endDate)
                activate llist
                ctrl -> llist : limitEvents(endDate)
                deactivate llist

                UI -> ctrl : doExport()


                activate llist
                    ctrl -> llist : export()
                      activate l2pdf
                          llist -> l2pdf : export(this)
                      deactivate l2pdf
                deactivate llist

        deactivate ctrl

        UI --> Actor : generates file with labels including the events list and shows success message

    else Refuses
                activate ctrl
                        UI --> Actor : Asks to choose path to save file
                        Actor -> UI : Chooses path
                        UI -> ctrl : choosePath(path)
                        activate llist
                        ctrl -> llist : choosePath(path)
                        deactivate llist

                UI -> ctrl : doExport()


                activate llist
                    ctrl -> llist : export()
                    activate l2pdf
                        llist -> l2pdf : export(this)
                    deactivate l2pdf
                deactivate llist

                deactivate ctrl

        UI --> Actor : generates file with labels and shows success message

    end alt
deactivate UI

@enduml