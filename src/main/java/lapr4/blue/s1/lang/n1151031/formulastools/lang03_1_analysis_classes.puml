@startuml lang03_01_analysis_classes.png
    interface Extensible<T> {
        +T getExtension(String name);
    }
    interface "Cell : Extensible<Cell>" as Cell {
    }
    class CellImpl {
        -transient Map<String, CellExtension> extensions;
        +Cell getExtension(String name);
    }
    class CellExtension {
	-Cell delegate;
	-String name;
        +CellExtension(Cell delegate, String name)
    }
    class StylableCell {
    }
    class "<<analysis>> ConditionStylableCell" as ConditionStylableCell {
    }
    interface CellListenner {
    }
    class "<<analysis>> CommentableCell" as CommentableCell {
    }
    
    Class "<<analysis>> ConditionStyle" as ConditionStyle
    Extensible <|-- Cell
    Cell <|-- CellExtension
    CellListenner <|-- CellExtension
    CellExtension <|-- StylableCell
    CellExtension <|-- ConditionStylableCell
    interface Expression
    ConditionStylableCell -> ConditionStyle : \n\ntrueStyle
    ConditionStylableCell -> ConditionStyle : falseStyle
    ConditionStylableCell -> Expression : condition

    Cell <|-- CellImpl
    CellImpl o- CellExtension : extensions
    CellExtension <|-- CommentableCell

@enduml